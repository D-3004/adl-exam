Exp6
Aim: To Build, change, and destroy AWS infrastructure Using Terraform.

Steps:
1. Install the AWS CLI version 2 on Linux
Follow these steps from the command line to install the AWS CLI on Linux.
Install curl on Linux

sudo apt-get install curl

curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"

sudo apt install unzip

sudo unzip awscliv2.zip

sudo ./aws/install

aws --version

2. Create a new access key if you don't have one. Make sure you download the keys in your
local machine.
a. Login to AWS console, click on username and go to My security credentials.
b. Continue on security credentials, click on access keys

Perform below commands in Linux where you have installed Terraform
First setup your access keys, secret keys and region code locally.

aws configure

3. Create one Directory for Terraform project in which all files of terraform we can save
cd Downloads
mkdir project-terraform
cd project-terraform

4. Create Terraform Files
sudo nano variables.tf

In order to provide key name in variables first create key pair.
Give name to key pair file as terraform
Use your Region and Key name in variable.tf as shown and provide instance type which you want to create.
After creating variable terraform file note down the AMI ID of instance which u want to create which we will use to configure our instance in main.tf file

5. Now create main.tf file:

sudo nano main.tf

provider "aws" {
 region = var.aws_region
}
#Create security group with firewall rules
resource "aws_security_group" "security_jenkins_port" {
 name = "security_jenkins_port"
 description = "security group for jenkins"
 ingress {
 from_port = 8080
 to_port = 8080
 protocol = "tcp"
 cidr_blocks = ["0.0.0.0/0"]
 }
 ingress {
 from_port = 22
 to_port = 22
 protocol = "tcp"
 cidr_blocks = ["0.0.0.0/0"]
 }
# outbound from jenkis server
 egress {
 from_port = 0
 to_port = 65535
 protocol = "tcp"
 cidr_blocks = ["0.0.0.0/0"]
 }
 tags= {
 Name = "security_jenkins_port"
 }
}
resource "aws_instance" "myFirstInstance" {
 ami = "ami-0b9064170e32bde34"
 key_name = var.key_name
 instance_type = var.instance_type
 security_groups= [ "security_jenkins_port"]
 tags= {
 Name = "jenkins_instance"
 }
}
# Create Elastic IP address
resource "aws_eip" "myFirstInstance" {
 vpc = true
 instance = aws_instance.myFirstInstance.id
tags= {
 Name = "jenkins_elstic_ip"
 }
}

Put AMI-ID in above highlighted space and Now execute the below command:
terraform init

terraform plan

terraform apply

6. Now login to EC2 console, to see the new instances up and running, you can see Jenkins_instance is up and running which we deploy from terraform.

You can also check the security group resource details which you created from terraform.

you can also destroy or delete your instance by using terraform destroy command: 
terraform destroy

Now you can see instance which you created by using terraform is deleted successfully from aws console also you can check it will removed successfully.






